import type { NextPage } from 'next';
import Head from 'next/head';
import { ChangeEvent, useState } from 'react';
import 'react-quill/dist/quill.snow.css';
import dynamic from 'next/dynamic';
import { ReactQuillProps } from 'react-quill';
import SaveButton from '../components/SaveButton';
import Title from '../components/Title';
import Navbar from '../components/Navbar';
import { toolbarOptions } from '../utils/quillOptions';
import { useSession } from 'next-auth/react';
import axios from 'axios';
import { Post } from '../utils/types';

const DynamicReactQuill = dynamic(() => import('react-quill'), { ssr: false });


const Home: NextPage = () => {
  const { data: session } = useSession();
  const [saved, setSaved] = useState(false);
  const [title, setTitle] = useState('');
  const [value, setValue] = useState('');
  const [isPreviewing, setIsPreviewing] = useState(false);

  console.count('render');

  if (saved && session?.user?.email && session?.user?.name) {
    const post: Post = {
      author: session.user.name,
      email: session.user.email,
      title,
      post: value
    };

    axios.post('/api/post', post);
  }

  const reactQuillProps: ReactQuillProps = {
    value: value,
    onChange: (v) => {
      setValue(v);
      setSaved(false);
    },
    modules: {
      toolbar: toolbarOptions
    }
  } 

  const handleTitleChange = (e: ChangeEvent<HTMLInputElement>): void => {
    setSaved(false);
    setTitle(e.currentTarget.value);
  }

  return (
    <div>
      <Head>
        <title>Papyr.it</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='flex flex-col items-center w-full h-screen bg-[#EAE5D3]'>
        <Navbar />
        
        <div className='flex items-center justify-center h-full'>
          <div className='w-[816px] space-y-10 bg-[#f3eed9] p-10 rounded-xl h-5/6 min-h-fit'>
            
            <div className='flex items-center space-x-5 text-3xl font-bold'>
              <Title title={title} setTitle={handleTitleChange} />
              <SaveButton saved={saved} setSaved={setSaved} />
            </div>

            {/* <button onClick={() => setIsPreviewing(!isPreviewing)}>{isPreviewing ? 'Edit' : 'Preview'}</button> */}

            <DynamicReactQuill {...reactQuillProps} className='h-[70%]' id='editor' readOnly={isPreviewing}></DynamicReactQuill>
          </div>
        </div>

      </main>
    </div>
  );
}

export default Home;

// quill
//   ql-toolbar
//     ql-formats 
//     ql-formats 
//     ql-formats 
//     ql-formats
//   ql-container
//     ql-editor 
